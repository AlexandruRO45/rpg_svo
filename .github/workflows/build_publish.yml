name: Build and Publish

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up QEMU
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v3

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: "*musllinux*"
        CIBW_BEFORE_BUILD: |
          yum install -y boost-devel opencv-devel eigen3-devel cmake3 || 
          apt-get update && apt-get install -y libboost-dev libopencv-dev libeigen3-dev cmake

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.arch }}
        path: wheelhouse/*.whl

  test-demo:
    needs: build-linux
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Download and install wheel
      uses: actions/download-artifact@v4
      with:
        name: wheels-x86_64
    
    - name: Test installation and demo
      run: |
        pip install *.whl
        python run_demo.py || python -c "import svo_cpp; print('OK')"
  publish:
    name: Publish to PyPI
    needs: [build-linux, test-demo]
    runs-on: ubuntu-latest
    # Only publish on tags or manual dispatch with publish_to_pypi=true
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') || 
        (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true')
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/svo_cpp
    steps:
      - name: "Download PyPI wheels"
        uses: actions/download-artifact@v4
        with:
          name: pypi-wheels
          path: dist/
          merge-multiple: true

      - name: "Publish package to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1