name: Build x86_64 + aarch64 Wheels

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "main"
  pull_request:
    branches:
      - "develop"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheel on ${{ matrix.os }} (${{ matrix.arch }})
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-24.04-arm
            arch: aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Python and cibuildwheel
        run: |
          python3 -m pip install --upgrade pip
          pip install cibuildwheel==2.16.5

      - name: Show architecture info
        run: |
          echo "uname -m: $(uname -m)"
          echo "arch: $(arch)"
          lscpu | grep Architecture


      - name: Build wheels
        env:
          CIBW_BEFORE_ALL_LINUX: bash .github/scripts/install_sys_deps.sh
          CIBW_PLATFORM: linux
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_SKIP: "*-musllinux*"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_ENVIRONMENT: >
            CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheelhouse-${{ matrix.arch }}
          path: wheelhouse/*.whl
  publish_to_pypi:
    name: "Publish to PyPI"
    needs: build-wheels
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/svo_cpp
    steps:
      - name: "Download PyPI wheels"
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Flatten dist structure
        run: |
          mkdir -p final_dist
          find dist/ -name "*.whl" -exec cp {} final_dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: final_dist/
