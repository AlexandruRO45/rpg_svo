name: Build x86_64 + aarch64 Wheels

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-linux:
    name: Build manylinux wheels (x86_64 + aarch64)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Setup QEMU for aarch64 (if needed)
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - name: Build wheel
        env:
          CIBW_BEFORE_ALL_LINUX: bash .github/install_sys_deps.sh
          CIBW_PLATFORM: linux
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_SKIP: "*-musllinux*"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: "cp38-* cp310-* cp312-*"
          CIBW_ENVIRONMENT: >
            CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheelhouse-${{ matrix.arch }}
          path: wheelhouse/*.whl

  publish:
    name: Publish Wheels to PyPI
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist structure
        run: |
          mkdir -p final_dist
          find dist -name "*.whl" -exec cp {} final_dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: final_dist
