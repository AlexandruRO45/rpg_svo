# .github/workflows/build_publish.yml
name: Build and Publish

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  # JOB 1: Build portable manylinux wheels for PyPI using cibuildwheel
  build_manylinux_wheels:
    name: "Build manylinux Wheels"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository and Submodules"
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: "Build Wheels with cibuildwheel"
        uses: pypa/cibuildwheel@v2.19.0

      - name: "Store PyPI wheels"
        uses: actions/upload-artifact@v4
        with:
          name: pypi-wheels
          path: wheelhouse/*.whl

  # JOB 2: Build a native wheel specifically for Ubuntu (optional, good for specific releases)
  build_ubuntu_wheel:
    name: "Build Native Ubuntu Wheel for Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.12"]

    steps:
      - name: "Checkout Repository and Submodules"
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install Ubuntu System Dependencies"
        run: |
          # NOTE: You need to create an 'apt-dependencies.txt' file in your
          # repository root with one package name per line, e.g.:
          # build-essential
          # cmake
          # libeigen3-dev
          # libopencv-dev
          # libboost-serialization-dev
          sudo apt-get update
          sudo xargs -a apt-dependencies.txt apt-get install -y --no-install-recommends

      - name: "Install Python Build Tools"
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: "Build wheel with python-build"
        run: python -m build --wheel --outdir wheelhouse_artifact .

      - name: "Store Ubuntu wheel"
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-native-wheel-python-${{ matrix.python-version }}
          path: wheelhouse_artifact/*.whl

  # JOB 3: Publish to PyPI (only runs on new version tags)
  publish_to_pypi:
    name: "Publish to PyPI"
    needs: build_manylinux_wheels
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      # This permission is required for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/svo_cpp # URL to your package on PyPI
    steps:
      - name: "Download PyPI wheels"
        uses: actions/download-artifact@v4
        with:
          name: pypi-wheels
          path: dist/

      - name: "Publish package to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
